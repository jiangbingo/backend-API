"""
Django settings for gezapi project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import ConfigParser

config_file = ConfigParser.ConfigParser()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
config_file.read(
    os.path.join(os.path.dirname(os.path.abspath(__file__)), 'config.ini'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'sevv3^7@6^&y1vxx+65g8sab=4@f#1lce5gg!1f2_8-wkp=+iz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

ATOMIC_REQUESTS = True

HOST = config_file.get('service', 'host')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'djcelery',
    'models',
    'api',
    'corsheaders',
]

CORS_ORIGIN_ALLOW_ALL = True
# CORS_URLS_REGEX = r'^(/master?mod=\d+&act=\d+|\w*.js|\w*.bin)$'
CORS_ALLOW_HEADERS = (
    'SECDATA','SIGN','SIGNTYPE','SID','SESSIONID','x-requested-with',
        'content-type',
        'accept',
        'origin',
        'authorization',
        'x-csrftoken'
)
CORS_ALLOW_CREDENTIALS=True
CORS_REPLACE_HTTPS_REFERER=True

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gezapi.urls'

WSGI_APPLICATION = 'gezapi.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases
import sys

# if 'test' in sys.argv:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'unit_test',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': ''
    }
}
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': config_file.get('database', 'name'),
#             'USER': config_file.get('database', 'username'),
#             'PASSWORD': config_file.get('database', 'password'),
#             'HOST': config_file.get('database', 'host'),
#             'PORT': config_file.get('database', 'port')
#         }
#     }

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'oauth2_provider.ext.rest_framework.OAuth2Authentication',
        # 'rest_framework.authentication.TokenAuthentication',
        # 'sdk.middleware.DisableCSRFCheck',
        # 'rest_framework.authentication.SessionAuthentication',
    )
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/statics/'
STATIC_FILES = os.path.join(BASE_DIR, 'statics')
STATICFILES_DIRS = (
    STATIC_FILES,
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": config_file.get('redis', 'location'),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": config_file.get('redis', 'password'),

        },
        "TIMEOUT": config_file.get('redis', 'timeout'),
    }
}
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

LOGIN_REDIRECT_URL = '/'

EMAIL_HOST = config_file.get('email', 'host')
EMAIL_PORT = config_file.get('email', 'port')
EMAIL_HOST_USER = config_file.get('email', 'username')
EMAIL_HOST_PASSWORD = config_file.get('email', 'password')
EMAIL_USE_TLS = config_file.get('email', 'tls')
